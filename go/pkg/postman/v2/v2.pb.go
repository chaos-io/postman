// Code generated by mojo. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: postman/v2/v2.proto

package postman

import (
	_ "github.com/mojo-lang/core/go/pkg/mojo"
	core "github.com/mojo-lang/core/go/pkg/mojo/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Listen   string  `protobuf:"bytes,5,opt,name=listen,proto3" json:"listen,omitempty"`
	Script   *Script `protobuf:"bytes,6,opt,name=script,proto3" json:"script,omitempty"`
	Disabled bool    `protobuf:"varint,10,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postman_v2_v2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_postman_v2_v2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_postman_v2_v2_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetListen() string {
	if x != nil {
		return x.Listen
	}
	return ""
}

func (x *Event) GetScript() *Script {
	if x != nil {
		return x.Script
	}
	return nil
}

func (x *Event) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type Script struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Exec []string `protobuf:"bytes,6,rep,name=exec,proto3" json:"exec,omitempty"`
	Src  *Url     `protobuf:"bytes,10,opt,name=src,proto3" json:"src,omitempty"`
	Name string   `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Script) Reset() {
	*x = Script{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postman_v2_v2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Script) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Script) ProtoMessage() {}

func (x *Script) ProtoReflect() protoreflect.Message {
	mi := &file_postman_v2_v2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Script.ProtoReflect.Descriptor instead.
func (*Script) Descriptor() ([]byte, []int) {
	return file_postman_v2_v2_proto_rawDescGZIP(), []int{1}
}

func (x *Script) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Script) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Script) GetExec() []string {
	if x != nil {
		return x.Exec
	}
	return nil
}

func (x *Script) GetSrc() *Url {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *Script) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Items struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string       `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description *Description `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Variable    []*Variable  `protobuf:"bytes,8,rep,name=variable,proto3" json:"variable,omitempty"`
	Item        []*Items     `protobuf:"bytes,10,rep,name=item,proto3" json:"item,omitempty"`
	Event       []*Event     `protobuf:"bytes,15,rep,name=event,proto3" json:"event,omitempty"`
	Auth        *Auth        `protobuf:"bytes,20,opt,name=auth,proto3" json:"auth,omitempty"`
	Request     *Request     `protobuf:"bytes,25,opt,name=request,proto3" json:"request,omitempty"`
	Response    []*Response  `protobuf:"bytes,30,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *Items) Reset() {
	*x = Items{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postman_v2_v2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Items) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Items) ProtoMessage() {}

func (x *Items) ProtoReflect() protoreflect.Message {
	mi := &file_postman_v2_v2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Items.ProtoReflect.Descriptor instead.
func (*Items) Descriptor() ([]byte, []int) {
	return file_postman_v2_v2_proto_rawDescGZIP(), []int{2}
}

func (x *Items) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Items) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Items) GetDescription() *Description {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Items) GetVariable() []*Variable {
	if x != nil {
		return x.Variable
	}
	return nil
}

func (x *Items) GetItem() []*Items {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *Items) GetEvent() []*Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *Items) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *Items) GetRequest() *Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *Items) GetResponse() []*Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type Description struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Type    string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Version string `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Description) Reset() {
	*x = Description{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postman_v2_v2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Description) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Description) ProtoMessage() {}

func (x *Description) ProtoReflect() protoreflect.Message {
	mi := &file_postman_v2_v2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Description.ProtoReflect.Descriptor instead.
func (*Description) Descriptor() ([]byte, []int) {
	return file_postman_v2_v2_proto_rawDescGZIP(), []int{3}
}

func (x *Description) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Description) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Description) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url         []*Url       `protobuf:"bytes,1,rep,name=url,proto3" json:"url,omitempty"`
	Auth        *Auth        `protobuf:"bytes,5,opt,name=auth,proto3" json:"auth,omitempty"`
	Proxy       *ProxyConfig `protobuf:"bytes,10,opt,name=proxy,proto3" json:"proxy,omitempty"`
	Certificate *Certificate `protobuf:"bytes,11,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Method      string       `protobuf:"bytes,21,opt,name=method,proto3" json:"method,omitempty"`
	Description *Description `protobuf:"bytes,22,opt,name=description,proto3" json:"description,omitempty"`
	Header      []*Header    `protobuf:"bytes,25,rep,name=header,proto3" json:"header,omitempty"`
	Body        []*Body      `protobuf:"bytes,30,rep,name=body,proto3" json:"body,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postman_v2_v2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_postman_v2_v2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_postman_v2_v2_proto_rawDescGZIP(), []int{4}
}

func (x *Request) GetUrl() []*Url {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *Request) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *Request) GetProxy() *ProxyConfig {
	if x != nil {
		return x.Proxy
	}
	return nil
}

func (x *Request) GetCertificate() *Certificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *Request) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Request) GetDescription() *Description {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Request) GetHeader() []*Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Request) GetBody() []*Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type Url struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Raw      string      `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
	Protocol string      `protobuf:"bytes,10,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Host     []string    `protobuf:"bytes,15,rep,name=host,proto3" json:"host,omitempty"`
	Path     []string    `protobuf:"bytes,18,rep,name=path,proto3" json:"path,omitempty"`
	Port     string      `protobuf:"bytes,20,opt,name=port,proto3" json:"port,omitempty"`
	Query    *QueryParam `protobuf:"bytes,21,opt,name=query,proto3" json:"query,omitempty"`
	Hash     string      `protobuf:"bytes,22,opt,name=hash,proto3" json:"hash,omitempty"`
	Variable []*Variable `protobuf:"bytes,30,rep,name=variable,proto3" json:"variable,omitempty"`
}

func (x *Url) Reset() {
	*x = Url{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postman_v2_v2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Url) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Url) ProtoMessage() {}

func (x *Url) ProtoReflect() protoreflect.Message {
	mi := &file_postman_v2_v2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Url.ProtoReflect.Descriptor instead.
func (*Url) Descriptor() ([]byte, []int) {
	return file_postman_v2_v2_proto_rawDescGZIP(), []int{5}
}

func (x *Url) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

func (x *Url) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Url) GetHost() []string {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *Url) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *Url) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Url) GetQuery() *QueryParam {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *Url) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Url) GetVariable() []*Variable {
	if x != nil {
		return x.Variable
	}
	return nil
}

type QueryParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value       string       `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Disable     bool         `protobuf:"varint,5,opt,name=disable,proto3" json:"disable,omitempty"`
	Description *Description `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	Hash        string       `protobuf:"bytes,11,opt,name=hash,proto3" json:"hash,omitempty"`
	Variable    []*Variable  `protobuf:"bytes,12,rep,name=variable,proto3" json:"variable,omitempty"`
}

func (x *QueryParam) Reset() {
	*x = QueryParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postman_v2_v2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryParam) ProtoMessage() {}

func (x *QueryParam) ProtoReflect() protoreflect.Message {
	mi := &file_postman_v2_v2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryParam.ProtoReflect.Descriptor instead.
func (*QueryParam) Descriptor() ([]byte, []int) {
	return file_postman_v2_v2_proto_rawDescGZIP(), []int{6}
}

func (x *QueryParam) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *QueryParam) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *QueryParam) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

func (x *QueryParam) GetDescription() *Description {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *QueryParam) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *QueryParam) GetVariable() []*Variable {
	if x != nil {
		return x.Variable
	}
	return nil
}

type ProxyConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match   string `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	Host    string `protobuf:"bytes,5,opt,name=host,proto3" json:"host,omitempty"`
	Port    int32  `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	Tunnel  bool   `protobuf:"varint,10,opt,name=tunnel,proto3" json:"tunnel,omitempty"`
	Disable bool   `protobuf:"varint,11,opt,name=disable,proto3" json:"disable,omitempty"`
}

func (x *ProxyConfig) Reset() {
	*x = ProxyConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postman_v2_v2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConfig) ProtoMessage() {}

func (x *ProxyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_postman_v2_v2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConfig.ProtoReflect.Descriptor instead.
func (*ProxyConfig) Descriptor() ([]byte, []int) {
	return file_postman_v2_v2_proto_rawDescGZIP(), []int{7}
}

func (x *ProxyConfig) GetMatch() string {
	if x != nil {
		return x.Match
	}
	return ""
}

func (x *ProxyConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ProxyConfig) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ProxyConfig) GetTunnel() bool {
	if x != nil {
		return x.Tunnel
	}
	return false
}

func (x *ProxyConfig) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

type Certificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Matches    []string     `protobuf:"bytes,5,rep,name=matches,proto3" json:"matches,omitempty"`
	Key        *core.Object `protobuf:"bytes,10,opt,name=key,proto3" json:"key,omitempty"`
	Cert       *core.Object `protobuf:"bytes,11,opt,name=cert,proto3" json:"cert,omitempty"`
	Passphrase string       `protobuf:"bytes,15,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
}

func (x *Certificate) Reset() {
	*x = Certificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postman_v2_v2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Certificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Certificate) ProtoMessage() {}

func (x *Certificate) ProtoReflect() protoreflect.Message {
	mi := &file_postman_v2_v2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Certificate.ProtoReflect.Descriptor instead.
func (*Certificate) Descriptor() ([]byte, []int) {
	return file_postman_v2_v2_proto_rawDescGZIP(), []int{8}
}

func (x *Certificate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Certificate) GetMatches() []string {
	if x != nil {
		return x.Matches
	}
	return nil
}

func (x *Certificate) GetKey() *core.Object {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Certificate) GetCert() *core.Object {
	if x != nil {
		return x.Cert
	}
	return nil
}

func (x *Certificate) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value       string       `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Disable     bool         `protobuf:"varint,5,opt,name=disable,proto3" json:"disable,omitempty"`
	Description *Description `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postman_v2_v2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_postman_v2_v2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_postman_v2_v2_proto_rawDescGZIP(), []int{9}
}

func (x *Header) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Header) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Header) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

func (x *Header) GetDescription() *Description {
	if x != nil {
		return x.Description
	}
	return nil
}

type Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode       string               `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
	Raw        string               `protobuf:"bytes,5,opt,name=raw,proto3" json:"raw,omitempty"`
	Graphql    *core.Object         `protobuf:"bytes,6,opt,name=graphql,proto3" json:"graphql,omitempty"`
	Urlencoded *UrlEncodedParameter `protobuf:"bytes,10,opt,name=urlencoded,proto3" json:"urlencoded,omitempty"`
	Formdata   *FormParameter       `protobuf:"bytes,15,opt,name=formdata,proto3" json:"formdata,omitempty"`
	File       *core.Object         `protobuf:"bytes,20,opt,name=file,proto3" json:"file,omitempty"`
	Options    *core.Object         `protobuf:"bytes,25,opt,name=options,proto3" json:"options,omitempty"`
	Disable    bool                 `protobuf:"varint,26,opt,name=disable,proto3" json:"disable,omitempty"`
}

func (x *Body) Reset() {
	*x = Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postman_v2_v2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Body) ProtoMessage() {}

func (x *Body) ProtoReflect() protoreflect.Message {
	mi := &file_postman_v2_v2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Body.ProtoReflect.Descriptor instead.
func (*Body) Descriptor() ([]byte, []int) {
	return file_postman_v2_v2_proto_rawDescGZIP(), []int{10}
}

func (x *Body) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *Body) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

func (x *Body) GetGraphql() *core.Object {
	if x != nil {
		return x.Graphql
	}
	return nil
}

func (x *Body) GetUrlencoded() *UrlEncodedParameter {
	if x != nil {
		return x.Urlencoded
	}
	return nil
}

func (x *Body) GetFormdata() *FormParameter {
	if x != nil {
		return x.Formdata
	}
	return nil
}

func (x *Body) GetFile() *core.Object {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *Body) GetOptions() *core.Object {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Body) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

type UrlEncodedParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value       string       `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Disable     bool         `protobuf:"varint,5,opt,name=disable,proto3" json:"disable,omitempty"`
	Description *Description `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UrlEncodedParameter) Reset() {
	*x = UrlEncodedParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postman_v2_v2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlEncodedParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlEncodedParameter) ProtoMessage() {}

func (x *UrlEncodedParameter) ProtoReflect() protoreflect.Message {
	mi := &file_postman_v2_v2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlEncodedParameter.ProtoReflect.Descriptor instead.
func (*UrlEncodedParameter) Descriptor() ([]byte, []int) {
	return file_postman_v2_v2_proto_rawDescGZIP(), []int{11}
}

func (x *UrlEncodedParameter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UrlEncodedParameter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UrlEncodedParameter) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

func (x *UrlEncodedParameter) GetDescription() *Description {
	if x != nil {
		return x.Description
	}
	return nil
}

type FormParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         string       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value       string       `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Disable     bool         `protobuf:"varint,5,opt,name=disable,proto3" json:"disable,omitempty"`
	Type        string       `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	ContentType string       `protobuf:"bytes,9,opt,name=content_type,json=contentType,proto3" json:"contentType,omitempty"`
	Description *Description `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *FormParameter) Reset() {
	*x = FormParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postman_v2_v2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormParameter) ProtoMessage() {}

func (x *FormParameter) ProtoReflect() protoreflect.Message {
	mi := &file_postman_v2_v2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormParameter.ProtoReflect.Descriptor instead.
func (*FormParameter) Descriptor() ([]byte, []int) {
	return file_postman_v2_v2_proto_rawDescGZIP(), []int{12}
}

func (x *FormParameter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FormParameter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FormParameter) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

func (x *FormParameter) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FormParameter) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *FormParameter) GetDescription() *Description {
	if x != nil {
		return x.Description
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OriginalRequest *Request        `protobuf:"bytes,10,opt,name=original_request,json=originalRequest,proto3" json:"originalRequest,omitempty"`
	ResponseTime    *core.Timestamp `protobuf:"bytes,11,opt,name=response_time,json=responseTime,proto3" json:"responseTime,omitempty"`
	Timings         *core.Object    `protobuf:"bytes,12,opt,name=timings,proto3" json:"timings,omitempty"`
	Header          []string        `protobuf:"bytes,20,rep,name=header,proto3" json:"header,omitempty"`
	Cookie          []*Cookie       `protobuf:"bytes,21,rep,name=cookie,proto3" json:"cookie,omitempty"`
	Body            string          `protobuf:"bytes,22,opt,name=body,proto3" json:"body,omitempty"`
	Status          string          `protobuf:"bytes,30,opt,name=status,proto3" json:"status,omitempty"`
	Code            int32           `protobuf:"varint,31,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postman_v2_v2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_postman_v2_v2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_postman_v2_v2_proto_rawDescGZIP(), []int{13}
}

func (x *Response) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Response) GetOriginalRequest() *Request {
	if x != nil {
		return x.OriginalRequest
	}
	return nil
}

func (x *Response) GetResponseTime() *core.Timestamp {
	if x != nil {
		return x.ResponseTime
	}
	return nil
}

func (x *Response) GetTimings() *core.Object {
	if x != nil {
		return x.Timings
	}
	return nil
}

func (x *Response) GetHeader() []string {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Response) GetCookie() []*Cookie {
	if x != nil {
		return x.Cookie
	}
	return nil
}

func (x *Response) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Response) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type Cookie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain   string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Expires  string `protobuf:"bytes,5,opt,name=expires,proto3" json:"expires,omitempty"`
	MaxAge   string `protobuf:"bytes,10,opt,name=max_age,json=maxAge,proto3" json:"maxAge,omitempty"`
	HostOnly bool   `protobuf:"varint,11,opt,name=host_only,json=hostOnly,proto3" json:"hostOnly,omitempty"`
	HttpOnly bool   `protobuf:"varint,12,opt,name=http_only,json=httpOnly,proto3" json:"httpOnly,omitempty"`
	Name     string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	Path     string `protobuf:"bytes,21,opt,name=path,proto3" json:"path,omitempty"`
	Secure   bool   `protobuf:"varint,25,opt,name=secure,proto3" json:"secure,omitempty"`
	Session  bool   `protobuf:"varint,26,opt,name=session,proto3" json:"session,omitempty"`
	Value    string `protobuf:"bytes,30,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Cookie) Reset() {
	*x = Cookie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postman_v2_v2_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cookie) ProtoMessage() {}

func (x *Cookie) ProtoReflect() protoreflect.Message {
	mi := &file_postman_v2_v2_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cookie.ProtoReflect.Descriptor instead.
func (*Cookie) Descriptor() ([]byte, []int) {
	return file_postman_v2_v2_proto_rawDescGZIP(), []int{14}
}

func (x *Cookie) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Cookie) GetExpires() string {
	if x != nil {
		return x.Expires
	}
	return ""
}

func (x *Cookie) GetMaxAge() string {
	if x != nil {
		return x.MaxAge
	}
	return ""
}

func (x *Cookie) GetHostOnly() bool {
	if x != nil {
		return x.HostOnly
	}
	return false
}

func (x *Cookie) GetHttpOnly() bool {
	if x != nil {
		return x.HttpOnly
	}
	return false
}

func (x *Cookie) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cookie) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Cookie) GetSecure() bool {
	if x != nil {
		return x.Secure
	}
	return false
}

func (x *Cookie) GetSession() bool {
	if x != nil {
		return x.Session
	}
	return false
}

func (x *Cookie) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Variable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key         string       `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value       string       `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Type        string       `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Name        string       `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Description *Description `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	System      bool         `protobuf:"varint,13,opt,name=system,proto3" json:"system,omitempty"`
	Disable     bool         `protobuf:"varint,14,opt,name=disable,proto3" json:"disable,omitempty"`
}

func (x *Variable) Reset() {
	*x = Variable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_postman_v2_v2_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Variable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variable) ProtoMessage() {}

func (x *Variable) ProtoReflect() protoreflect.Message {
	mi := &file_postman_v2_v2_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variable.ProtoReflect.Descriptor instead.
func (*Variable) Descriptor() ([]byte, []int) {
	return file_postman_v2_v2_proto_rawDescGZIP(), []int{15}
}

func (x *Variable) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Variable) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Variable) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Variable) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Variable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Variable) GetDescription() *Description {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Variable) GetSystem() bool {
	if x != nil {
		return x.System
	}
	return false
}

func (x *Variable) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

var File_postman_v2_v2_proto protoreflect.FileDescriptor

var file_postman_v2_v2_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x76, 0x32, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76,
	0x32, 0x1a, 0x14, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x15, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7d, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61,
	0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x04, 0xda, 0xcf, 0x24,
	0x00, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x77, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x21, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x55, 0x72, 0x6c, 0x52, 0x03, 0x73, 0x72, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x87,
	0x03, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x42,
	0x04, 0xda, 0xcf, 0x24, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x2b, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x42, 0x04, 0xda, 0xcf, 0x24, 0x00, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x2d, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x04,
	0xda, 0xcf, 0x24, 0x00, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x2d, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x36, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x1e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x04, 0xda, 0xcf, 0x24, 0x00, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0xe1, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d,
	0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x72, 0x6c, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x24,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32,
	0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x12, 0x39, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d,
	0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x19, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x24, 0x0a,
	0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x22, 0xe3, 0x01, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x30, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6f, 0x73, 0x74,
	0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x0a, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x30, 0x0a, 0x08, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x7d, 0x0a, 0x0b, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x75, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x0b, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a,
	0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f,
	0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04,
	0x63, 0x65, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61,
	0x73, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68,
	0x72, 0x61, 0x73, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x39, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e,
	0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbf, 0x02, 0x0a,
	0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x2b, 0x0a, 0x07, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x07, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x12, 0x3f, 0x0a, 0x0a, 0x75, 0x72, 0x6c, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70,
	0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x72, 0x6c, 0x45, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x75,
	0x72, 0x6c, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x66, 0x6f, 0x72,
	0x6d, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x6f,
	0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x25, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x92,
	0x01, 0x0a, 0x13, 0x55, 0x72, 0x6c, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xc3, 0x01, 0x0a, 0x0d, 0x46, 0x6f, 0x72, 0x6d, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc6, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2b, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0xfd, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74,
	0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x74, 0x74, 0x70, 0x4f, 0x6e,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x08, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x39, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x4e, 0x0a, 0x0a,
	0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x2e, 0x76, 0x32, 0x42, 0x07, 0x56, 0x32, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x68, 0x61, 0x6f, 0x73, 0x2d, 0x69, 0x6f, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x6d,
	0x61, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61,
	0x6e, 0x2f, 0x76, 0x32, 0x3b, 0x70, 0x6f, 0x73, 0x74, 0x6d, 0x61, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_postman_v2_v2_proto_rawDescOnce sync.Once
	file_postman_v2_v2_proto_rawDescData = file_postman_v2_v2_proto_rawDesc
)

func file_postman_v2_v2_proto_rawDescGZIP() []byte {
	file_postman_v2_v2_proto_rawDescOnce.Do(func() {
		file_postman_v2_v2_proto_rawDescData = protoimpl.X.CompressGZIP(file_postman_v2_v2_proto_rawDescData)
	})
	return file_postman_v2_v2_proto_rawDescData
}

var file_postman_v2_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_postman_v2_v2_proto_goTypes = []interface{}{
	(*Event)(nil),               // 0: postman.v2.Event
	(*Script)(nil),              // 1: postman.v2.Script
	(*Items)(nil),               // 2: postman.v2.Items
	(*Description)(nil),         // 3: postman.v2.Description
	(*Request)(nil),             // 4: postman.v2.Request
	(*Url)(nil),                 // 5: postman.v2.Url
	(*QueryParam)(nil),          // 6: postman.v2.QueryParam
	(*ProxyConfig)(nil),         // 7: postman.v2.ProxyConfig
	(*Certificate)(nil),         // 8: postman.v2.Certificate
	(*Header)(nil),              // 9: postman.v2.Header
	(*Body)(nil),                // 10: postman.v2.Body
	(*UrlEncodedParameter)(nil), // 11: postman.v2.UrlEncodedParameter
	(*FormParameter)(nil),       // 12: postman.v2.FormParameter
	(*Response)(nil),            // 13: postman.v2.Response
	(*Cookie)(nil),              // 14: postman.v2.Cookie
	(*Variable)(nil),            // 15: postman.v2.Variable
	(*Auth)(nil),                // 16: postman.v2.Auth
	(*core.Object)(nil),         // 17: mojo.core.Object
	(*core.Timestamp)(nil),      // 18: mojo.core.Timestamp
}
var file_postman_v2_v2_proto_depIdxs = []int32{
	1,  // 0: postman.v2.Event.script:type_name -> postman.v2.Script
	5,  // 1: postman.v2.Script.src:type_name -> postman.v2.Url
	3,  // 2: postman.v2.Items.description:type_name -> postman.v2.Description
	15, // 3: postman.v2.Items.variable:type_name -> postman.v2.Variable
	2,  // 4: postman.v2.Items.item:type_name -> postman.v2.Items
	0,  // 5: postman.v2.Items.event:type_name -> postman.v2.Event
	16, // 6: postman.v2.Items.auth:type_name -> postman.v2.Auth
	4,  // 7: postman.v2.Items.request:type_name -> postman.v2.Request
	13, // 8: postman.v2.Items.response:type_name -> postman.v2.Response
	5,  // 9: postman.v2.Request.url:type_name -> postman.v2.Url
	16, // 10: postman.v2.Request.auth:type_name -> postman.v2.Auth
	7,  // 11: postman.v2.Request.proxy:type_name -> postman.v2.ProxyConfig
	8,  // 12: postman.v2.Request.certificate:type_name -> postman.v2.Certificate
	3,  // 13: postman.v2.Request.description:type_name -> postman.v2.Description
	9,  // 14: postman.v2.Request.header:type_name -> postman.v2.Header
	10, // 15: postman.v2.Request.body:type_name -> postman.v2.Body
	6,  // 16: postman.v2.Url.query:type_name -> postman.v2.QueryParam
	15, // 17: postman.v2.Url.variable:type_name -> postman.v2.Variable
	3,  // 18: postman.v2.QueryParam.description:type_name -> postman.v2.Description
	15, // 19: postman.v2.QueryParam.variable:type_name -> postman.v2.Variable
	17, // 20: postman.v2.Certificate.key:type_name -> mojo.core.Object
	17, // 21: postman.v2.Certificate.cert:type_name -> mojo.core.Object
	3,  // 22: postman.v2.Header.description:type_name -> postman.v2.Description
	17, // 23: postman.v2.Body.graphql:type_name -> mojo.core.Object
	11, // 24: postman.v2.Body.urlencoded:type_name -> postman.v2.UrlEncodedParameter
	12, // 25: postman.v2.Body.formdata:type_name -> postman.v2.FormParameter
	17, // 26: postman.v2.Body.file:type_name -> mojo.core.Object
	17, // 27: postman.v2.Body.options:type_name -> mojo.core.Object
	3,  // 28: postman.v2.UrlEncodedParameter.description:type_name -> postman.v2.Description
	3,  // 29: postman.v2.FormParameter.description:type_name -> postman.v2.Description
	4,  // 30: postman.v2.Response.original_request:type_name -> postman.v2.Request
	18, // 31: postman.v2.Response.response_time:type_name -> mojo.core.Timestamp
	17, // 32: postman.v2.Response.timings:type_name -> mojo.core.Object
	14, // 33: postman.v2.Response.cookie:type_name -> postman.v2.Cookie
	3,  // 34: postman.v2.Variable.description:type_name -> postman.v2.Description
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_postman_v2_v2_proto_init() }
func file_postman_v2_v2_proto_init() {
	if File_postman_v2_v2_proto != nil {
		return
	}
	file_postman_v2_auth_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_postman_v2_v2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postman_v2_v2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Script); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postman_v2_v2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Items); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postman_v2_v2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Description); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postman_v2_v2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postman_v2_v2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Url); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postman_v2_v2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postman_v2_v2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postman_v2_v2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Certificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postman_v2_v2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postman_v2_v2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postman_v2_v2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlEncodedParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postman_v2_v2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postman_v2_v2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postman_v2_v2_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cookie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_postman_v2_v2_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Variable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_postman_v2_v2_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_postman_v2_v2_proto_goTypes,
		DependencyIndexes: file_postman_v2_v2_proto_depIdxs,
		MessageInfos:      file_postman_v2_v2_proto_msgTypes,
	}.Build()
	File_postman_v2_v2_proto = out.File
	file_postman_v2_v2_proto_rawDesc = nil
	file_postman_v2_v2_proto_goTypes = nil
	file_postman_v2_v2_proto_depIdxs = nil
}
